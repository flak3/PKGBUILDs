# Maintainer : Daniel Bermond < yahoo-com: danielbermond >
# Contributor: Iacopo Isimbaldi <isiachi@rhye.it>

# INFO: Changed some stuff.

# I do not provide this package on my website because I am not
# sure if I would be allowed to do that (probably not).

pkgname=ffmpeg-full
_srcname=ffmpeg
pkgver=3.3.4
pkgrel=1
pkgdesc='Record, convert and stream audio and video (with almost all possible libs)'
arch=('i686' 'x86_64' 'arm' 'armv6h' 'armv7h' 'aarch64')
url='http://www.ffmpeg.org/'
license=('LGPL' 'GPL')
depends=(
    # official repositories:
        'glibc'
        'alsa-lib'
        'jack'
        'libpng'
        'bzip2'
        'frei0r-plugins'
        'libgcrypt'
        'gmp'
        'gnutls'
        'ladspa'
        'libass'
        'libbluray'
        'libcaca'
        'celt'
        'libcdio-paranoia'
        'libdc1394'
        'libavc1394'
        'libfdk-aac'
        'fontconfig'
        'freetype2'
        'fribidi'
        'libgme'
        'gsm'
        'libiec61883'
        'libmodplug'
        'lame'
        'opencore-amr'
        'opencv'
        'openjpeg2'
        'opus'
        'pulseaudio'
        'rubberband'
        'rtmpdump'
        'schroedinger'
        'smbclient'
        'snappy'
        'libsoxr'
        'speex'
        'libssh'
        'tesseract'
        'libtheora'
        'twolame'
        'v4l-utils'
        'vid.stab'
        'libvorbis'
        'libvpx'
        'wavpack'
        'libwebp'
        'libx264.so'
        'x265'
        'libxcb'
        'xvidcore'
        'zimg'
        'zeromq'
        'zvbi'
        'xz'
        'netcdf'
        'openal'
        'opencl-icd-loader'
        'mesa'
        'openssl'
        'sdl2'
        'libx11'
        'zlib'
        'libomxil-bellagio'
        'libva'
        'libdrm'
        'libvdpau'
    # AUR:
        'chromaprint-fftw'
        'libbs2b'
        'flite1'
        'libilbc'
        'kvazaar'
        'openh264'
        'libopenmpt'
        'shine'
        'vo-amrwbenc'
        'xavs'
        'libmfx'
)
depends_x86_64=('cuda')
optdepends_x86_64=(
    # AUR:
        'intel-media-sdk: for Intel QSV support (experimental)'
)
makedepends=(
    # official repositories:
        'yasm' 'opencl-headers'
    # AUR:
        #'blackmagic-decklink-sdk'
)
provides=(
    'ffmpeg'
    'ffmpeg-full-nvenc'
    'ffmpeg-nvenc'
    'ffmpeg-libfdk_aac'
    #'ffmpeg-decklink'
    'qt-faststart'
    'libavutil.so'
    'libavcodec.so'
    'libavformat.so'
    'libavdevice.so'
    'libavfilter.so'
    'libavresample.so'
    'libswscale.so'
    'libswresample.so'
    'libpostproc.so'
)
conflicts=(
    'ffmpeg'
    'ffmpeg-full-nvenc'
    'ffmpeg-nvenc'
    'ffmpeg-libfdk_aac'
    'ffmpeg-decklink'
    'ffmpeg-git'
    'ffmpeg-full-git'
    'ffmpeg-semifull-git'
    'ffmpeg-qsv-git'
)
source=("https://ffmpeg.org/releases/ffmpeg-${pkgver}.tar.xz"
        'ffmpeg-openjpeg2.2.patch')
sha512sums=('ddeab4ab3d149a1b560c8ad2242f8ea5fb37a57a06a5af1adf6d5afde9975aa4b2d72f7c5106f20d2194b546164f55f93f6b3d1bb784501b842b0eae89a6a691'
            'fd6a28721ecc6926497b83a2ad211c5b76faa6c688981e3d8596c60a44e38cec3fca4e5f11ff258fda7bc85797d38b8882cc755f1817e3375e2ed89acb8e26b4')

prepare() {
    cd "${_srcname}-${pkgver}"
    patch -Np1 -i "${srcdir}/ffmpeg-openjpeg2.2.patch"
}

build() {
    cd "${_srcname}-${pkgver}"

    # set x86_64 specific options
    if [ "$CARCH" = 'x86_64' ]
    then
        _cuda='--enable-cuda'
        _cuvid='--enable-cuvid'
        _libnpp='--enable-libnpp'
        _cflags='--extra-cflags=-I/opt/cuda/include'
        _ldflags='--extra-ldflags=-L/opt/cuda/lib64 -Wl,-rpath -Wl,/opt/intel/mediasdk/lib64'
    fi

    msg2 'Running ffmpeg configure script. Please wait...'

    ./configure \
        --prefix=/usr \
        $_cflags \
        "$_ldflags" \
        \
        --enable-rpath \
        --enable-gpl \
        --enable-version3 \
        --enable-nonfree \
        --enable-shared \
        --disable-static \
        --enable-gray \
        --enable-avresample \
        \
        --enable-avisynth \
        --enable-bzlib \
        --enable-chromaprint \
        --enable-frei0r \
        --enable-gcrypt \
        --enable-gmp \
        --enable-gnutls \
        --enable-iconv \
        --enable-ladspa \
        --enable-libass \
        --enable-libbluray \
        --enable-libbs2b \
        --enable-libcaca \
        --enable-libcelt \
        --enable-libcdio \
        --enable-libdc1394 \
        --enable-libfdk-aac \
        --enable-libflite \
        --enable-fontconfig \
        --enable-libfreetype \
        --enable-libfribidi \
        --enable-libgme \
        --enable-libgsm \
        --enable-libiec61883 \
        --enable-libilbc \
        --enable-libkvazaar \
        --enable-libmodplug \
        --enable-libmp3lame \
        --enable-libopencore-amrnb \
        --enable-libopencore-amrwb \
        --enable-libopencv \
        --enable-libopenh264 \
        --enable-libopenjpeg \
        --enable-libopenmpt \
        --enable-libopus \
        --enable-libpulse \
        --enable-librubberband \
        --enable-librtmp  \
        --enable-libschroedinger \
        --enable-libshine \
        --enable-libsmbclient \
        --enable-libsnappy \
        --enable-libsoxr \
        --enable-libspeex \
        --enable-libssh \
        --enable-libtesseract \
        --enable-libtheora \
        --enable-libtwolame \
        --enable-libv4l2 \
        --enable-libvidstab \
        --enable-libvo-amrwbenc \
        --enable-libvorbis \
        --enable-libvpx \
        --enable-libwavpack \
        --enable-libwebp \
        --enable-libx264 \
        --enable-libx265 \
        --enable-libxavs \
        --enable-libxcb \
        --enable-libxcb-shm \
        --enable-libxcb-xfixes \
        --enable-libxcb-shape \
        --enable-libxvid \
        --enable-libzimg \
        --enable-libzmq \
        --enable-libzvbi \
        --enable-lzma \
        --enable-netcdf \
        --enable-openal \
        --enable-opencl \
        --enable-opengl \
        --enable-openssl \
        --enable-sdl2 \
        --enable-xlib \
        --enable-zlib \
        \
        $_cuda \
        $_cuvid \
        --enable-libmfx \
        $_libnpp \
        --enable-nvenc \
        --enable-omx \
        --enable-omx-rpi \
        --enable-vaapi \
        --enable-vdpau \
        --enable-videotoolbox
    make
    make tools/qt-faststart
}

package() {
    cd "${_srcname}-${pkgver}"
    make DESTDIR="$pkgdir" install

    install -D -m755 tools/qt-faststart  "${pkgdir}/usr/bin/qt-faststart"
    #install -D -m644 "${srcdir}/LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
}
